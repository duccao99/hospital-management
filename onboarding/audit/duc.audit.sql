

CREATE OR REPLACE TRIGGER TRIG_UPDATE_EMP_SAL
BEFORE UPDATE OF SAL
ON EMP_COPY
FOR EACH ROW
DECLARE 
BEGIN
    AUDIT_EMP(
        P_USERNAME => USER,
        P_ACTION =>  'UPDATE',
        P_EMPNO =>  :OLD.EMPNO,
        P_COLUMN_NAME => 'SAL',
        P_OLD_VALUE => TO_CHAR(:OLD.SAL),
        P_NEW_VALUE => TO_CHAR(:NEW.SAL)        
    );
END;

SELECT * FROM DUCCAO_ADMIN.NHANVIEN;

/*********************
*       Audit by trigger
**********************/

/*
* Table audit luong nhanvien
*/

CREATE TABLE AUDIT_LUONG_NHANVIEN(
    USERNAME VARCHAR2(200),
    ACTION VARCHAR2(200),
    MANV VARCHAR2(200),
    COLUMN_NAME VARCHAR2(200),
    OLD_VALUE VARCHAR2(200),
    NEW_VALUE VARCHAR2(200),
    CALL_STACK VARCHAR2(4000),
    CLIENT_ID VARCHAR2(200),
    ACTION_DATE DATE DEFAULT SYSDATE
);

/*
* procerdure audit luong nhanvien
*/
CREATE OR REPLACE PROCEDURE PROC_AUDIT_LUONG_NHANVIEN(
    P_USERNAME IN VARCHAR2,
    P_ACTION IN VARCHAR2,
    P_MANV IN VARCHAR2,
    P_COLUMN_NAME IN VARCHAR2,
    P_OLD_VALUE IN VARCHAR2,
    P_NEW_VALUE IN VARCHAR2
)
AS 
BEGIN
    INSERT INTO AUDIT_LUONG_NHANVIEN (USERNAME,ACTION,MANV,COLUMN_NAME,
    OLD_VALUE,NEW_VALUE,CALL_STACK,CLIENT_ID,ACTION_DATE)
    VALUES (P_USERNAME,P_ACTION,P_MANV,P_COLUMN_NAME,P_OLD_VALUE,P_NEW_VALUE,
    DBMS_UTILITY.FORMAT_CALL_STACK,SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER'),SYSDATE);
END;
/


/*
* procerdure show audit luong nhanvien
*/
CREATE OR REPLACE PROCEDURE SHOW_AUDIT_LUONG_NHANVIEN
AS
BEGIN
    FOR REC IN (
        SELECT * 
        FROM DUCCAO_ADMIN.AUDIT_LUONG_NHANVIEN
        ORDER BY ACTION_DATE DESC)
    LOOP
        DBMS_OUTPUT.PUT_LINE('User: '||rec.username);
        DBMS_OUTPUT.PUT_LINE('Client ID: '||rec.CLIENT_ID);
        DBMS_OUTPUT.PUT_LINE('Action: '||rec.ACTION);
        DBMS_OUTPUT.PUT_LINE('MANV: '||rec.MANV);
        DBMS_OUTPUT.PUT_LINE('COLUMN_NAME: '||rec.COLUMN_NAME);
        DBMS_OUTPUT.PUT_LINE('OLD_VALUE: '||rec.OLD_VALUE);
        DBMS_OUTPUT.PUT_LINE('NEW_VALUE: '||rec.NEW_VALUE);
        DBMS_OUTPUT.PUT_LINE('CALL_STACK: '||rec.CALL_STACK);
        DBMS_OUTPUT.PUT_LINE('DAY: '||TO_CHAR(rec.ACTION_DATE,'Mon-DD-YY HH24:MI'));
    END LOOP;
END;
/


/*
* trigger audit luong nhanvien
*/
CREATE OR REPLACE TRIGGER TRIG_UPDATE_NHANVIEN_LUONG
BEFORE UPDATE OF LUONG
ON DUCCAO_ADMIN.NHANVIEN
FOR EACH ROW
DECLARE
BEGIN
      PROC_AUDIT_LUONG_NHANVIEN(
        P_USERNAME => USER,
        P_ACTION =>  'UPDATE',
        P_MANV =>  :OLD.MANV,
        P_COLUMN_NAME => 'LUONG',
        P_OLD_VALUE => TO_CHAR(:OLD.LUONG),
        P_NEW_VALUE => TO_CHAR(:NEW.LUONG)        
    );
END;



/*********************
*       End Audit by trigger
**********************/



/*******************
    Pure Oracle Audit
********************/
ALTER SYSTEM SET audit_sys_operations = true scope = spfile;
AUDIT CONNECT;
show parameter audit_trail;

select * from DBA_AUDIT_TRAIL ;
select * from DBA_COMMON_AUDIT_TRAIL  ;

-- audit when user login
audit session;

-- AUDIT DELETE TABLE
AUDIT DELETE ANY TABLE BY ACCESS WHENEVER NOT SUCCESSFUL;
AUDIT DELETE ANY TABLE BY ACCESS;
AUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE, EXECUTE PROCEDURE BY ACCESS WHENEVER NOT SUCCESSFUL;

AUDIT SELECT TABLE, UPDATE TABLE BY DUCCAO_ADMIN;
AUDIT SELECT ON DUCCAO_ADMIN.NHANVIEN;


CONN DUCCAO_ADMIN/DUCCAO_ADMIN;
SELECT * FROM DUCCAO_ADMIN.NHANVIEN;

SELECT USERNAME, SQL_TEXT, TIMESTAMP 
FROM DBA_AUDIT_TRAIL 
WHERE SQL_TEXT LIKE 'SELECT';

SELECT *
FROM DBA_AUDIT_TRAIL 
WHERE USERNAME LIKE 'DUCCAO_ADMIN';


-- audit change luong of nhanvien
audit select on DUCCAO_ADMIN.NHANVIEN;

SELECT   SYS_CONTEXT('USERENV','SESSION_USER') FROM DUAL;

EXEC SHOW_AUD;




--
ALTER SESSION SET CURRENT_SCHEMA = SYS;
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

CREATE USER AUDIT_DBA IDENTIFIED BY AUDIT_DBA;
GRANT CREATE SESSION TO AUDIT_DBA;
GRANT DBA TO AUDIT_DBA;
GRANT AUDIT_ADMIN TO AUDIT_DBA;

CONN AUDIT_DBA/AUDIT_DBA;
ALTER SESSION SET CURRENT_SCHEMA=AUDIT_DBA;

CREATE TABLE TEMP_NHAN_VIEN(
    NV_NAME VARCHAR2(200) NOT NULL PRIMARY KEY,
    NV_LUONG INT
);

INSERT INTO TEMP_NHAN_VIEN (NV_NAME,NV_LUONG) VALUES ('N1',10000);
INSERT INTO TEMP_NHAN_VIEN (NV_NAME,NV_LUONG) VALUES ('N2',30000);
INSERT INTO TEMP_NHAN_VIEN (NV_NAME,NV_LUONG) VALUES ('N3',20000);
INSERT INTO TEMP_NHAN_VIEN (NV_NAME,NV_LUONG) VALUES ('N4',40000);

BEGIN
    DBMS_FGA.ADD_POLICY(
         object_schema      => 'AUDIT_DBA',
       object_name        => 'TEMP_NHAN_VIEN',
       policy_name        => 'POL_ONBOARD_AUDIT', 
        handler_schema     =>   NULL, 
    handler_module     =>   NULL
    );
END;

ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
CREATE USER ABCD IDENTIFIED BY ABCD;
GRANT CREATE SESSION TO ABCD;

GRANT SELECT ON AUDIT_DBA.TEMP_NHAN_VIEN TO ABCD;

CONN ABCD/ABCD;
ALTER SESSION SET CURRENT_SCHEMA = ABCD;
SELECT * from AUDIT_DBA.TEMP_NHAN_VIEN
WHERE NV_LUONG >= 10;


CONN ABCD/ABCD;
ALTER SESSION SET CURRENT_SCHEMA = ABCD;
SELECT * from AUDIT_DBA.TEMP_NHAN_VIEN
WHERE NV_LUONG > 10;

-- CHECK AUDIT
ALTER SESSION SET CURRENT_SCHEMA = SYS;
SELECT DBUSERNAME, ACTION_NAME, SQL_TEXT, OBJECT_SCHEMA, OBJECT_NAME, EVENT_TIMESTAMP 
FROM UNIFIED_AUDIT_TRAIL
WHERE DBUSERNAME = 'ABCD';

SELECT DBUSERNAME, ACTION_NAME, SQL_TEXT, OBJECT_SCHEMA, OBJECT_NAME, EVENT_TIMESTAMP 
FROM UNIFIED_AUDIT_TRAIL
WHERE DBUSERNAME = 'ABCD'
ORDER BY EVENT_TIMESTAMP DESC ;

-- DUCCAO_ADMIN
BEGIN
    DBMS_FGA.ADD_POLICY(
        object_schema      => 'DUCCAO_ADMIN',
        object_name        => 'NHANVIEN',
        policy_name        => 'AUDIT_NHANVIEN', 
        handler_schema     =>   NULL, 
        handler_module     =>   NULL,
         enable             =>   TRUE, 
           statement_types    =>  'SELECT, INSERT, UPDATE, DELETE'
    );
END;

SELECT DBUSERNAME, ACTION_NAME, SQL_TEXT, OBJECT_SCHEMA, OBJECT_NAME, EVENT_TIMESTAMP 
FROM UNIFIED_AUDIT_TRAIL
WHERE DBUSERNAME = 'USER_TIEPTAN_01'
ORDER BY EVENT_TIMESTAMP DESC ;

SELECT DBUSERNAME, ACTION_NAME, SQL_TEXT, OBJECT_SCHEMA, OBJECT_NAME, EVENT_TIMESTAMP 
FROM UNIFIED_AUDIT_TRAIL
ORDER BY EVENT_TIMESTAMP DESC ;


/*********************************
    End Pure Oracle Audit
**********************************/



/*********************
*      Standard audit
**********************/
show parameter audit_trail;

-- AUDIT LOGON LOGOFF
AUDIT SESSION;

AUDIT SELECT ON DUCCAO_ADMIN.VIEW_DOCTOR_SEE_PATIENT_INFO BY ACCESS WHENEVER NOT SUCCESSFUL;
AUDIT SELECT ON DUCCAO_ADMIN.NHANVIEN BY ACCESS;

SELECT DBUSERNAME,ACTION_NAME,SQL_TEXT,OBJECT_SCHEMA,OBJECT_NAME,EVENT_TIMESTAMP
FROM UNIFIED_AUDIT_TRAIL
ORDER BY EVENT_TIMESTAMP DESC;

/*********************
*    End  Standard audit
**********************/






 ANALYZE TABLE DUCCAO_ADMIN.NHANVIEN COMPUTE STATISTICS;





